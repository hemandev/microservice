version: "3.8"

services:
  user-db:
    image: postgres:13
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_db
    ports:
      - "5433:5432"
    networks:
      - monorepo-network
    volumes:
      - ./user-service/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./user-service/db/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d user_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  post-db:
    image: postgres:13
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: post_db
    ports:
      - "5434:5432"
    networks:
      - monorepo-network
    volumes:
      - ./post-service/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./post-service/db/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d post_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build: ./user-service
    ports:
      - "4001:4001"
    environment:
      DB_HOST: user-db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: user_db
      GRPC_PORT: 50051
    depends_on:
      user-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monorepo-network

  post-service:
    build: ./post-service
    ports:
      - "4002:4002"
    environment:
      DB_HOST: post-db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: post_db
      USER_SERVICE_URL: user-service:50051
    depends_on:
      post-db:
        condition: service_healthy
      user-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monorepo-network

  router-service:
    build: ./router-service
    ports:
      - "4000:4000"
    depends_on:
      - user-service
      - post-service
    networks:
      - monorepo-network

networks:
  monorepo-network:
    driver: bridge
